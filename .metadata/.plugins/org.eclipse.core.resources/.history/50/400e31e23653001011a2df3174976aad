options{  JDK_VERSION = "1.5";}PARSER_BEGIN(StefanMak)/** Simple brace matcher. */public class StefanMak{  /** Main entry point. */  public static void main(String args []) throws ParseException  {    StefanMak parser = new StefanMak(System.in);    System.out.println("Start Eingabe");    parser.Input();  }}PARSER_END(StefanMak)TOKEN : /**/{  < LETTER : [ "a"-"z", "A"-"Z", "_" ] >| < DIGIT : [ "0"-"9" ] >| < OTHERCHAR : [ "+", "-", "*", "/", ".", ",", ";", ":", "!", "?", "=", "#", "%", "<", ">", "$", "(", ")", "[", "]", "{", "}", "@", "&", "^", "|", "\\" ] >| < IDENT : < LETTER > (< LETTER > | < DIGIT > )* >| < NUMBER : < DIGIT > (< DIGIT >) >}/** Root production. */void Input() :{}{  MatchedBraces()  (    "\n"  | "\r"  )*  < EOF >}/** Brace matching production. */void MatchedBraces() :{}{  "{" [ MatchedBraces() ] "}"}