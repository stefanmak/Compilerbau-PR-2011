/* Generated By:JavaCC: Do not edit this line. StefanMakConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface StefanMakConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int COMMENT = 5;
  /** RegularExpression Id. */
  int LPAR = 6;
  /** RegularExpression Id. */
  int RPAR = 7;
  /** RegularExpression Id. */
  int LBRACKET = 8;
  /** RegularExpression Id. */
  int RBRACKET = 9;
  /** RegularExpression Id. */
  int COMMA = 10;
  /** RegularExpression Id. */
  int SEMICOLON = 11;
  /** RegularExpression Id. */
  int DOT = 12;
  /** RegularExpression Id. */
  int IS = 13;
  /** RegularExpression Id. */
  int COLON = 14;
  /** RegularExpression Id. */
  int IF = 15;
  /** RegularExpression Id. */
  int ENDIF = 16;
  /** RegularExpression Id. */
  int THEN = 17;
  /** RegularExpression Id. */
  int ELSE = 18;
  /** RegularExpression Id. */
  int OR = 19;
  /** RegularExpression Id. */
  int VOID = 20;
  /** RegularExpression Id. */
  int AND = 21;
  /** RegularExpression Id. */
  int TRUE = 22;
  /** RegularExpression Id. */
  int FALSE = 23;
  /** RegularExpression Id. */
  int WHILE = 24;
  /** RegularExpression Id. */
  int ENDWHILE = 25;
  /** RegularExpression Id. */
  int DO = 26;
  /** RegularExpression Id. */
  int RETURN = 27;
  /** RegularExpression Id. */
  int WRITE = 28;
  /** RegularExpression Id. */
  int BEGIN = 29;
  /** RegularExpression Id. */
  int END = 30;
  /** RegularExpression Id. */
  int PROCEDURE = 31;
  /** RegularExpression Id. */
  int PROGRAM = 32;
  /** RegularExpression Id. */
  int INTEGER = 33;
  /** RegularExpression Id. */
  int BOOLEAN = 34;
  /** RegularExpression Id. */
  int CONST = 35;
  /** RegularExpression Id. */
  int DECLARE = 36;
  /** RegularExpression Id. */
  int READONLY = 37;
  /** RegularExpression Id. */
  int NEW = 38;
  /** RegularExpression Id. */
  int BLANK = 39;
  /** RegularExpression Id. */
  int RELOP = 40;
  /** RegularExpression Id. */
  int EQUALOP = 41;
  /** RegularExpression Id. */
  int ADDOP = 42;
  /** RegularExpression Id. */
  int MULOP = 43;
  /** RegularExpression Id. */
  int NUMBER = 44;
  /** RegularExpression Id. */
  int DIGIT = 45;
  /** RegularExpression Id. */
  int IDENT = 46;
  /** RegularExpression Id. */
  int STRING = 47;
  /** RegularExpression Id. */
  int LETTER = 48;
  /** RegularExpression Id. */
  int OTHERCHAR = 49;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "<COMMENT>",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\",\"",
    "\";\"",
    "\".\"",
    "\"=\"",
    "\":\"",
    "\"If\"",
    "\"EndIf\"",
    "\"Then\"",
    "\"Else\"",
    "\"Or\"",
    "\"void\"",
    "\"And\"",
    "\"True\"",
    "\"False\"",
    "\"While\"",
    "\"EndWhile\"",
    "\"Do\"",
    "\"Return\"",
    "\"Write\"",
    "\"Begin\"",
    "\"End\"",
    "\"Procedure\"",
    "\"Program\"",
    "\"int\"",
    "\"bool\"",
    "\"Const\"",
    "\"Declare\"",
    "\"readonly\"",
    "\"new\"",
    "\"#\"",
    "<RELOP>",
    "<EQUALOP>",
    "<ADDOP>",
    "<MULOP>",
    "<NUMBER>",
    "<DIGIT>",
    "<IDENT>",
    "<STRING>",
    "<LETTER>",
    "<OTHERCHAR>",
    "\":=\"",
  };

}
